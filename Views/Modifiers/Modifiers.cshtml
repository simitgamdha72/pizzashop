@model pizzashop.Models.ViewModels.ModifiersViewModel

<div id="menu" class="container-fluid">

    <div class="fs-2 fw-semibold mb-3" style="color: #006CAC;">Menu</div>

    <!-- menuNavbar -->
    <div class="menubar mb-2 mb-sm-3 rounded-1 bg-white">
        <ul class="nav">
            <li>
                <a class="nav-link" href="@Url.Action("Menu", "Category")">
                    <i class="bi bi-list-check me-2"></i>
                    Items
                </a>
            </li>
            <li class="active">
                <a class="nav-link">
                    <i class="bi bi-ui-checks-grid me-2"></i>
                    Modifiers
                </a>
            </li>
        </ul>
    </div>

    <div class="d-flex">


        <!-- Modifiers Section -->
        <div class="offcanvas-lg start-0" data-bs-scroll="true" tabindex="-1" id="offcanvascategory">
            <div class="bg-light min-vh-100" style="width: 260px;display:flex;flex-direction: column;">
                <div class="justify-content-between w-100 p-3" style="display: flex;align-items: center;">
                    <div class="fs-4 fw-semibold" style="color: #006CAC;">Modifiers Group</div>
                    <button class="customBtnSecondary fs-4 py-0 px-2" id="loadModalAddModifierGroupBtn"><i
                            class="bi bi-plus-lg"></i></button>
                </div>
                <div id="ModifierListPartialView"></div>
            </div>
        </div>


        <div class="bg-white container-fluid py-3 px-3">
            <div style="display: flex; align-items:center;">
                <button class="d-lg-none fs-4 me-2 menubtn" style="color: #006CAC;" type="button"
                    data-bs-toggle="offcanvas" data-bs-target="#offcanvascategory" aria-controls="offcanvascategory">
                    <i class="bi bi-list-ul"></i>
                </button>
                <div class="fs-4 fw-semibold" style="color: #006CAC;">Modifiers</div>
            </div>
            <div class="mb-2 mb-sm-3" style="display: flex; justify-content: end; align-items: center;">
                <div class="d-flex">
                    <form style="position: relative;margin-right: 10px;">
                        <input type="search" id="searchInput" placeholder="  Search" aria-label="Search"
                            class="form-control" style="width: 200px;height: 52px;margin-right: 2px; border: 2px solid #eee;
                                border-radius: 4px;">

                        <i class="bi bi-search" style="position: absolute;right: 10px;top: 15px;"></i>
                    </form>
                    <button class="customBtnSecondary px-md-3 me-3 fs-4" data-bs-toggle="modal"
                        data-bs-target="#MassDataDeleteModal"><i class=" bi bi-trash"></i></button>
                    <button class="customBtnPrimary px-3 p-md-3" id="loadModalAddModifierBtn"><i
                            class="bi bi-plus-lg me-0 me-sm-2"></i><span class="d-none d-sm-block">New
                            Modifiers</span></button>
                </div>

            </div>

            <div class="">
                <div id="ModifiersContainer">
                    <!-- The table will be loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modalContainer"></div>
<div id="modalContainertable"></div>
<div id="modalsContainer"></div>





@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}



@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {

            loadModifiers();

            // 'Add New ModifierGroup' button
            $('#loadModalAddModifierGroupBtn').on('click', function () {
                $.ajax({
                    url: '@Url.Action("addModifierModalGroup", "Modifiers")',
                    type: 'GET',
                    success: function (response) {
                        // partial view 
                        $('#modalContainer').html(response);

                        //show the modal after loading
                        $('#addModifiersModalGroup').modal('show');
                    },
                    error: function () {
                        alert("An error occurred while loading the modal.");
                    }
                });
            });


            // 'Add New Modifier' button
            $('#loadModalAddModifierBtn').on('click', function () {
                $.ajax({
                    url: '@Url.Action("addModifierModal", "Modifiers")',
                    type: 'GET',
                    success: function (response) {
                        // partial view 
                        $('#modalContainer').html(response);

                        //show the modal after loading
                        $('#AddModifierModal').modal('show');
                    },
                    error: function () {
                        alert("An error occurred while loading the modal.");
                    }
                });
            });

            let currentStateModifier = {
                ModifierGroupId: null,
                searchTerm: '',
                currentPage: 1,
                pageSize: 5
            };

            $(document).on('click', 'a[data-mg-id]', function (e) {
                e.preventDefault();
                var ModifiersGroupIdd = $(this).attr('data-mg-id');
                currentStateModifier.ModifierGroupId = ModifiersGroupIdd;
                currentStateModifier.currentPage = 1;
                loadMenuModifiers2();
            });

            $('#searchInput').on('keyup', function () {
                const searchTerm = $(this).val().trim();
                currentStateModifier.searchTerm = searchTerm;
                currentStateModifier.currentPage = 1;

                //prevent too many requests
                clearTimeout($(this).data('timeout'));
                $(this).data('timeout', setTimeout(function () {
                    loadMenuModifiers2();
                }, 500));
            });

            $(document).on('change', '#pageSizeSelect', function () {
                currentStateModifier.pageSize = parseInt($(this).val());
                currentStateModifier.currentPage = 1;
                loadMenuModifiers2();
            });

            $(document).on('click', '#prevPageBtn:not([disabled])', function () {
                currentStateModifier.currentPage--;
                loadMenuModifiers2();
            });

            $(document).on('click', '#nextPageBtn:not([disabled])', function () {
                currentStateModifier.currentPage++;
                loadMenuModifiers2();
            });

            function loadMenuModifiers2() {
                $.ajax({
                    url: '/Modifiers/SearchItems',
                    type: 'GET',
                    data: {
                        ModifierGroupId: currentStateModifier.ModifierGroupId,
                        searchTerm: currentStateModifier.searchTerm,
                        page: currentStateModifier.currentPage,
                        pageSize: currentStateModifier.pageSize
                    },
                    success: function (result) {
                        $('#ModifiersContainer').html(result);

                        $('#pageSizeSelect').val(currentStateModifier.pageSize);
                    },
                    error: function (xhr, status, error) {
                        console.log("Error: " + error);
                    }
                });
            }

            window.loadMenuModifiers = function (ModifierGroupId) {
                currentStateModifier.ModifierGroupId = ModifierGroupId;
                currentStateModifier.currentPage = 1;
                currentStateModifier.searchTerm = '';
                $('#searchInput').val('');
                loadMenuModifiers2();
            };

            try {
                loadMenuModifiers2();
            } catch (e) {
                console.error("Error parsing URL parameters", e);
            }

        });



        function EditModifierGroupModal(id) {
            $.ajax({
                url: '@Url.Action("EditModifierGroupModal", "Modifiers")',
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    $('#modalContainer').html(response);

                    $('#EditModifiersGroupModal').modal('show');
                },
                error: function () {
                    alert("An error occurred while loading the modal.123");
                }
            });
        }

        function DeleteModifierGroupModal(id) {
            $.ajax({
                url: "/Modifiers/DeleteModifierGroupModal",
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    $('#modalContainer').html(response);

                    $('#DeleteModifierGroupModal').modal('show');
                },
                error: function () {
                    alert("An error occurred while loading the modal.");
                }
            });
        }

        function EditModifierModal(id) {
            console.log(id);
            $.ajax({
                url: '@Url.Action("EditModifierModal", "Modifiers")',
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    $('#modalContainer').html(response);

                    $('#EditModifiersModal').modal('show');
                },
                error: function () {
                    alert("An error occurred while loading the modal.");
                }
            });
        }

        function DeleteModifierModal(id) {
            $.ajax({
                url: "/Modifiers/DeleteModifierModal",
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    $('#modalContainer').html(response);

                    $('#DeleteModifierModal').modal('show');
                },
                error: function () {
                    alert("An error occurred while loading the modal.");
                }
            });
        }

        window.loadModifiers = function () {
            $.ajax({
                url: '@Url.Action("GetModifiersGroup", "Modifiers")',
                type: 'GET',
                success: function (result) {
                    $('#ModifierListPartialView').html(result);
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error);
                }
            });
        };


        @* $('#ExistingModifierTable').on('click', function (e) { *@
            function ExistingModifierTableclick() {
                $.ajax({
                    url: '@Url.Action("GetExistingModifierTable", "Modifiers")',
                    type: 'GET',
                    success: function (response) {
                        $('#modalContainertable').html(response);

                        $('#SelectExistingModifiersModal').modal('show');
                    },
                    error: function () {
                        alert("An error occurred while loading the modal.");
                    }
                });
            }






    </script>




}